'''
Created on Jul 10, 2024

@author: immanueltrummer
'''
import argparse
import openai
import pandas

client = openai.OpenAI()
    

def create_prompt(text):
    """ Create input prompt for the language model.
    
    Args:
        text: text to classify.
    
    Returns:
        prompt for text classification.
    """
    instructions = 'Is the underlying sentiment positive or negative?'
    formatting = '"Positive" or "Negative"'
    return f'Text:{text}\n{instructions}\nAnswer ({formatting}):'


def call_llm(prompt):
    """ Call LLM with input prompt and return answer. 
    
    Args:
        prompt: prompt to send to the language model.
    
    Returns:
        answer generated by LLM.
    """
    messages = [
        {'content':prompt, 'role':'user'}
        ]
    response = client.chat.completions.create(
        messages=messages, model='gpt-4o')
    return response.choices[0].message.content


def classify(text):
    """ Classifies input text.
    
    Args:
        text: the text to classify.
    
    Returns:
        Class label ("Positive" or "Negative").
    """
    prompt = create_prompt(text)
    answer = call_llm(prompt)
    return answer


if __name__ == '__main__':
    
    parser = argparse.ArgumentParser()
    parser.add_argument('path', type=str, help='Path to the input file')
    args = parser.parse_args()
    
    df = pandas.read_csv(args.path)
    df['class'] = df['text'].apply(classify)
    print(df)